# the main training configuration, typically generated from an existing
# preprocessing config file

# seed for initializing the PRNG prior to a training run for reproducible
# results; if unspecified the PRNG chooses its default seeding method
seed: null

# format string for the filename of the final output model; it can use the
# template variables model_name, run_name, and/or run_id, while the required
# variable "checkpoint" will be replaced with names like "best", "last" and
# other intermediate checkpoints
model_filename_format: '{model_name}_{run_name}_{checkpoint}_net.pth'

# format string for the name given to this run for a sequence of runs of the
# same model; the outputs of each run are placed in subdirectories of
# <run_path>/<model_name> with the name of this run; the format string can use
# the template variables model_name and run_id
run_name_format: run_{run_id}

# name and parameters of the neural net model to train
network:
    name: CustomCNN

    # net parameters for CNN
    params: {}

# name and parameters of the optimizer to use; all built-in optimizers from the
# torch.optim package are available for use here, and you can also provide a
# custom optimizer via a plugin
optimizer:
    name: Adam
    params:
        learning_rate: 0.001
        weight_decay: 0
        betas:
        - 0.9
        - 0.999
        eps: 1.0e-08
        amsgrad: false
        maximize: false

# the dataset/simulation configuration
dataset:
    # path to the CSV file containing the per-scenario parameters used in this
    # simulation, either as an absolute path, or as a path relative to this
    # config file
    scenario_params_path: DLModel_preprocessed_params.csv

# list of transforms to apply to the dataset; all optional transforms are
# disabled by default unless specified here; transforms which don't take any
# parameters can be listed just by their name, whereas transforms which do take
# parameters are given as {'name': <name>, 'param1':, 'param2':, ...}, where the
# params map param names (specific to the transform) to their values
dataset_transforms:
-   crop:
        max_snp: 100
        max_indiv: 20
        keep_polymorphic_only: true
-   snp_format: concat
-   validate_snp:
        uniform_shape: false

# number of epochs over which to repeat the training process
n_epochs: 1

# interval (number of batches processed) between two validation steps; for m
# evaluations per epoch, set to n_training_samples // (batch_size * m) where the
# number of training samples can be found in training logs
evaluation_interval: 96

# sample batch size to train on
batch_size: 8

# number of subprocesses to use for data loading
loader_num_workers: 2

# use CUDA-capable GPU where available
use_cuda: true

# specifies the CUDA device index to use
cuda_device: null

# description of the parameters the network will be trained on
learned_params:
-   T00:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T01:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T02:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T03:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T04:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T05:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T06:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T07:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T08:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T09:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T10:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T11:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T12:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T13:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T14:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T15:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T16:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T17:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T18:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T19:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false
-   T20:
        type: regression
        loss_func: MSE
        loss_weight: 1
        log_transform: false
        tied_to_position: false

# mean of each regression parameter over the training set
train_mean:
    T00: 86278.96753202402
    T01: 86278.96753202402
    T02: 89412.11613663322
    T03: 104779.09931734856
    T04: 105835.79914195102
    T05: 109309.45269594145
    T06: 120509.27740650259
    T07: 138124.20977459676
    T08: 157312.68931308537
    T09: 169198.96630983177
    T10: 197003.20545431765
    T11: 220386.30879762658
    T12: 222279.99802769156
    T13: 224373.19005094803
    T14: 246013.07488500964
    T15: 246013.07488500964
    T16: 246013.07488500964
    T17: 246013.07488500964
    T18: 246013.07488500964
    T19: 246013.07488500964
    T20: 246013.07488500964

# standard deviation of each regression parameter over the training set
train_std:
    T00: 34449.720671308576
    T01: 34449.720671308576
    T02: 42659.89351380986
    T03: 109711.34003744213
    T04: 110054.46104149023
    T05: 111538.71759774163
    T06: 122098.71502333708
    T07: 149947.52424454328
    T08: 185187.25598641945
    T09: 202062.3523063028
    T10: 214547.92125089988
    T11: 238510.08612734417
    T12: 237464.04163931
    T13: 238424.92926317788
    T14: 249488.952966579
    T15: 249488.952966579
    T16: 249488.952966579
    T17: 249488.952966579
    T18: 249488.952966579
    T19: 249488.952966579
    T20: 249488.952966579
dnadna_version: 1.0.0rc2.dev2+g7d8f198
preprocessing_datetime: '2022-06-13T09:42:56.314623+00:00'
inherit: DLModel_preprocessing_config.yml
